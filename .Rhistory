# Loading
library(dplyr)
library(naniar)
install.packages("lme4")
# Loading
library(dplyr)
library(naniar)
install.packages("naniar")
# Loading
library(dplyr)
library(naniar)
library(lme4)
# Loading
library(dplyr)
library(naniar)
library(lme4)
# Loading
library(dplyr)
library(naniar)
library(lme4)
library(ggplot2)
aid = read.csv("processed.csv")
aid
vis_miss(aid)
vis_miss(aid,cluster = TRUE)
ggplot(data = aid, x = Chinese_aid_toal, y = GDP_total_growth)+
geom_smooth()
ggplot(data = aid, aes(x = Chinese_aid_toal, y = GDP_total_growth))+
geom_smooth()
ggplot(data = aid, aes(x = Chinese_aid_total, y = GDP_total_growth))+
geom_smooth()
ggplot(data = aid, aes(x = Chinese_aid_total, y = GDP_total_growth))+
geom_point()
China <- lmer(GDP_total_growth ~ Chinese_aid_total + (1 | country), data = aid)
China <- lmer(as.numeric(GDP_total_growth) ~ Chinese_aid_total + (1 | country), data = aid)
China <- lmer(as.numeric(GDP_total_growth) ~ Chinese_aid_total + (1 | country), data = aid)
China <- lmer(as.numeric(GDP_total_growth) ~ Chinese_aid_total + (1 | country), data = aid)
summary(China)
China <- lmer(as.numeric(GDP_total_growth) ~ Chinese_aid_total + (1 | country), data = aid)
summary(China)
confint(China)
install.packages("merTools")
predictInterval(gpa_mixed)   # for various model predictions, possibly with new data
predictInterval(China)   # for various model predictions, possibly with new data
# Loading
library(dplyr)
library(naniar)
library(lme4)
library(ggplot2)
library(merTools)
predictInterval(China)   # for various model predictions, possibly with new data
REsim(China)             # mean, median and sd of the random effect estimates
plotREsim(REsim(China))  # plot the interval estimates
re = ranef(China)$country
qplot(x = re, geom = 'density', xlim = c(-3, 3))
re = ranef(China)$country
qplot(x = re, geom = 'density')
re <- ranef(China)$country
predict(China, re.form=NA) %>% head()
China_lm <- lm(GDP_total_growth ~ Chinese_aid_total)
China_lm <- lm(GDP_total_growth ~ Chinese_aid_total)
China_lm <- lm(GDP_total_growth ~ Chinese_aid_total, data = aid)
China_lm <- lm(GDP_total_growth ~ Chinese_aid_total, data = aid)
China_lm <- lm(as.numeric(GDP_total_growth) ~ Chinese_aid_total, data = aid)
predict(China, re.form=NA) %>% head()
predict_no_re <- predict(China, re.form=NA)
predict_lm <- predict(China_lm)
predict(China, re.form=NA) %>% head()
predict_no_re <- predict(China, re.form=NA)
predict_lm <- predict(China_lm)
predict_with_re <- predict(China)
plot(predict_no_re,predict_with_re,predict_lm)
predict(China, re.form=NA) %>% head()
predict_no_re <- predict(China, re.form=NA)
predict_lm <- predict(China_lm)
predict_with_re <- predict(China)
plot(China_aid_total,  predict_lm)
plot(aid$China_aid_total, predict_lm)
ggplot(data = aid, aes(x = US_aid_total, y = GDP_total_growth))+
geom_point()
China_lm <- lm(as.numeric(GDP_total_growth) ~ US_aid_total, data = aid)
US_lm <- lm(as.numeric(GDP_total_growth) ~ US_aid_total, data = aid)
re <- ranef(US)$country
US <- lmer(as.numeric(GDP_total_growth) ~ US_aid_total + (1 | country), data = aid)
summary(US)
confint(US)
re <- ranef(US)$country
predictInterval(US)   # for various model predictions, possibly with new data
REsim(US)             # mean, median and sd of the random effect estimates
plotREsim(REsim(US))  # plot the interval estimates
predict_no_re <- predict(US, re.form=NA)
predict_lm <- predict(US_lm)
predict_with_re <- predict(US)
usdata = data %>%
select(-Chinese_ODA,-Chinese_aid_total)
serialCorrelationTest(population, test = "rank.von.Neumann",
alternative = "two.sided", conf.level = 0.95)
install.packages("lmtest")
library(lmtest)
library(lmtest)
PP.test(population)
library(lmtest)
PP.test(aid$population)
install.packages("tseries")
library(lmtest)
library(tseries)
pp.test(aid$population)
library(lmtest)
library(tseries)
PP.test(aid$population)
library(lmtest)
library(tseries)
PP.test(aid$population)
library(lmtest)
library(tseries)
reg1<- lm(population~gdp_per_growth,data = aid)
library(lmtest)
library(tseries)
reg1<- lm(population~gdp_per_growth,data = aid)
dwtest(reg1)
library(lmtest)
library(tseries)
reg1<- lm(population~gdp_per_growth,data = aid)
dwtest(reg1)
pp.test(population)
library(lmtest)
library(tseries)
reg1<- lm(population~gdp_per_growth,data = aid)
dwtest(reg1)
pp.test(population,data = aid)
library(lmtest)
library(tseries)
reg1<- lm(population~gdp_per_growth,data = aid)
dwtest(reg1)
pp.test(aid$populationd)
# Loading
library(dplyr)
library(naniar)
library(lme4)
library(ggplot2)
library(merTools) #we use this package because we need to use the "predictInterval" function
library(dagitty)
# Loading
library(dplyr)
library(naniar)
library(lme4)
library(ggplot2)
library(merTools) #we use this package because we need to use the "predictInterval" function
library(dagitty)
dag <- dagitty("
dag {
bb=\"0,0,1,1\"
\"A:US_ODA\" [exposure,pos=\"0.272,0.239\"]
\"Y:Recipient_GDP_growth_rate\" [outcome,pos=\"0.672,0.254\"]
national_demand [latent,pos=\"0.540,0.050\"]
oda_gni [pos=\"0.446,0.310\"]
polity2 [pos=\"0.357,0.039\"]
population_growth_rate [pos=\"0.651,0.028\"]
recipient_trade_world [pos=\"0.412,0.504\"]
rest_world_aid [pos=\"0.397,0.159\"]
\"A:US_ODA\" -> \"Y:Recipient_GDP_growth_rate\"
\"A:US_ODA\" -> oda_gni
national_demand -> \"Y:Recipient_GDP_growth_rate\"
national_demand -> oda_gni
national_demand -> recipient_trade_world
oda_gni -> \"Y:Recipient_GDP_growth_rate\"
polity2 -> \"A:US_ODA\"
polity2 -> \"Y:Recipient_GDP_growth_rate\"
polity2 -> national_demand
polity2 -> rest_world_aid
population_growth_rate -> \"Y:Recipient_GDP_growth_rate\"
population_growth_rate -> national_demand
recipient_trade_world -> \"A:US_ODA\"
recipient_trade_world -> \"Y:Recipient_GDP_growth_rate\"
recipient_trade_world -> rest_world_aid
rest_world_aid -> \"Y:Recipient_GDP_growth_rate\"
rest_world_aid -> oda_gni
}
")
plot(dag)
